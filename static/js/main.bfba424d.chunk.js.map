{"version":3,"sources":["components/Nav/index.js","utils/API.js","utils/formatDate.js","components/Employee/index.js","components/Search/index.js","components/EmployeeSearch/index.js","components/EmployeeDirectory/index.js","App.js","index.js"],"names":["Nav","className","axios","get","formatDate","date","dateArray","split","year","join","Employee","props","result","map","results","alt","src","picture","thumbnail","name","first","last","phone","email","dob","login","uuid","Search","type","placeholder","value","onChange","handleInputChange","EmployeeSearch","filter","employeeSearch","toLowerCase","searchedEmployee","includes","EmployeeDirectory","state","search","order","renderEmployees","API","then","res","setState","data","catch","err","console","log","event","target","handleSortOrder","preventDefault","employeeSorter","sort","a","b","this","class","scope","data-order","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfba424d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Nav() {\r\n    return (\r\n        <header className=\"banner\">\r\n            <h1>Employee Tracker</h1>\r\n            <p>\r\n            Welcome to your employee management dashboard. You can search employees by their name, and sort the order they appear by clicking on the button below. Happy managing!\r\n        </p>\r\n        </header>\r\n\r\n        \r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Nav;","import axios from \"axios\";\r\n\r\nexport default {\r\n    employees: function() {\r\n        return axios.get(\r\n            \"https://randomuser.me/api/?results=50&nat=us\"\r\n        );\r\n    }\r\n};\r\n\r\n","function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n}\r\n\r\nexport default formatDate;","import React from \"react\";\r\nimport formatDate from \"../../utils/formatDate\";\r\n\r\nfunction Employee(props) {\r\nreturn (\r\n    <tbody>\r\n        {props.result.map(results => (\r\n        <tr key={results.login.uuid}>\r\n            <td><img alt=\"thumbnail\" src={results.picture.thumbnail}/></td>\r\n            <td>{results.name.first} {results.name.last}</td>\r\n            <td>{results.phone}</td>\r\n            <td>{results.email}</td>\r\n            <td>{formatDate(results.dob.date)}</td> \r\n        </tr>\r\n        ))}\r\n    </tbody>\r\n    )\r\n}\r\n\r\nexport default Employee;","import React from \"react\";\r\nimport './style.css';\r\n\r\nfunction Search(props) {\r\n    return (\r\n        \r\n        <div className=\"search\">\r\n            <form className=\"form-inline\">\r\n                <label><strong>Type a name:</strong></label>\r\n                <input \r\n                className=\"form-control\"\r\n                name=\"search\" \r\n                type=\"text\" \r\n                placeholder=\"'Dan Employeeberg,' e.g.\" \r\n                value={props.value} \r\n                onChange={props.handleInputChange}>\r\n                </input>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport formatDate from \"../../utils/formatDate\"\r\n\r\nfunction EmployeeSearch(props) {\r\n        return (\r\n            \r\n            <tbody>\r\n            {props.result.filter(employeeSearch => {\r\n                let name = employeeSearch.name.first.toLowerCase() + employeeSearch.name.last.toLowerCase();\r\n                let searchedEmployee = props.value.toLowerCase();\r\n                let result = name.includes(searchedEmployee);\r\n                return result;\r\n            }).map(results => (\r\n            <tr key={results.login.uuid}>\r\n                <td><img alt=\"thumbnail\" src={results.picture.thumbnail}/></td>\r\n                <td>{results.name.first} {results.name.last}</td>\r\n                <td>{results.phone}</td>\r\n                <td>{results.email}</td>\r\n                <td>{formatDate(results.dob.date)}</td> \r\n            </tr>\r\n            ))}\r\n        </tbody>\r\n        )\r\n    }\r\n\r\nexport default EmployeeSearch;","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport Employee from \"../Employee\";\r\nimport Search from \"../Search\";\r\nimport './style.css';\r\nimport EmployeeSearch from \"../EmployeeSearch\"\r\n\r\n\r\nclass EmployeeDirectory extends Component {\r\n    state = {\r\n        result: [],\r\n        search: \"\",\r\n        order: \"\"\r\n    };\r\n    // Use the api to get a set of random users\r\n     renderEmployees = () => {\r\n        API.employees()\r\n            .then(res => this.setState({ result: res.data.results }))\r\n            .catch(err => console.log(err));\r\n    }\r\n    // render all employees when the component mounts\r\n    componentDidMount() {\r\n        this.renderEmployees();\r\n    }\r\n\r\n    \r\n   \r\n\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        const { name, value } = event.target;\r\n    \r\n        // Updating the input's state\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n      // find way to sort users\r\n\r\n      // when a user clicks, we check the state order and flip it depending\r\n      handleSortOrder = event => {\r\n        event.preventDefault()\r\n\r\n        // setting up default setting to onMount as descending. When a user clicks it, we flip to ascending\r\n        if (`${this.state.order}` === \"\" || `${this.state.order}` === \"descending\") {\r\n\r\n            this.setState({\r\n                order: \"ascending\"\r\n            })\r\n\r\n            // compare the employees in result and sort them based on their names\r\n            const employeeSorter = this.state.result.sort((a, b) => {\r\n                let employeeA = a.name.last;\r\n                let employeeB = b.name.last;\r\n\r\n                if (employeeA < employeeB) {\r\n                    return -1\r\n                }\r\n\r\n                return 1;\r\n            });\r\n\r\n            this.setState({\r\n                result: employeeSorter\r\n            })\r\n        }\r\n\r\n        // now do the inverse, if the user flips back to descending order\r\n        else if (`${this.state.order}` === \"ascending\") {\r\n\r\n            this.setState({\r\n                order: \"descending\"\r\n            })\r\n\r\n            const employeeSorter = this.state.result.sort((a, b) => {\r\n                let employeeA = a.name.last;\r\n                let employeeB = b.name.last;\r\n\r\n                if (employeeA > employeeB) {\r\n                    return -1\r\n                }\r\n                return 1;\r\n            });\r\n\r\n            this.setState({\r\n                result: employeeSorter\r\n            })\r\n        }\r\n    }\r\n\r\n    // display results in a bootstrap table\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    value={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Thumbnail</th>\r\n                        <th scope=\"col\"\r\n                        \r\n                        data-order={this.state.order}\r\n                        onClick={this.handleSortOrder}\r\n                        >\r\n                        \r\n                        <span className = \"sorter\">Name (click to sort)</span></th>\r\n                        \r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Date of Birth</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {!this.state.search ? (\r\n                    <Employee\r\n                            result={this.state.result}\r\n                             />\r\n                    ) : (\r\n                            <EmployeeSearch result={this.state.result} \r\n                            value = {this.state.search} />\r\n                    )}\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeDirectory;","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport EmployeeDirectory from \"./components/EmployeeDirectory\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <Nav />\n            <EmployeeDirectory />\n        </div>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}